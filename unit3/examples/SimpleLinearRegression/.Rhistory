getwd()
setwd("/home/chris/Documents/itt/Enero_Junio_2020/Mineria_de_datos/DataMining/MachineLearning/SimpleLinearRegression")
getwd()
# Importing the dataset
dataset <- read.csv('Salary_Data.csv')
View(dataset)
# Splitting the dataset into the Training set and Test set
# Install.packages('caTools)
library(caTools)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
training_set <- subset(dataset, split == TRUE)
View(training_set)
test_set <- subset(dataset, split == FALSE)
View(test_set)
View(training_set)
View(test_set)
View(training_set)
View(dataset)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = dataset)
View(regressor)
summary(regressor)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of experience') +
ylab('Salary')
getwd()
setwd("/home/chris/Documents/itt/Enero_Junio_2020/Mineria_de_datos/DataMining/MachineLearning/SimpleLinearRegression")
getwd()
# Importing the dataset
dataset <- read.csv('Salary_Data.csv')
getwd()
setwd("/home/chris/Documents/itt/Enero_Junio_2020/Mineria_de_datos/DataMining/MachineLearning/SimpleLinearRegression")
getwd()
# Importing the dataset
dataset <- read.csv('Salary_Data.csv')
View(dataset)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
training_set <- subset(dataset, split == TRUE)
View(training_set)
test_set <- subset(dataset, split == FALSE)
View(test_set)
lm()?
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = dataset)
View(regressor)
summary(regressor)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of experience') +
ylab('Salary')
getwd()
getwd()
# Importing the dataset
dataset <- read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# Install.packages('caTools')
library(caTools)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = dataset)
summary(regressor)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years of experience') +
ylab('Salary')
